// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lastdemo.Models;

#nullable disable

namespace lastdemo.Migrations
{
    [DbContext(typeof(TestDemoDbContext))]
    partial class TestDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lastdemo.Models.AdminModel", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AdminId")
                        .HasName("PK__AdminMod__719FE488B1AEBB0F");

                    b.ToTable("AdminModel", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.AdmissionTable", b =>
                {
                    b.Property<int>("AdmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdmissionId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("InstituteId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdmissionId")
                        .HasName("PK__Admissio__C97EEC427D98A701");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstituteId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UserId");

                    b.ToTable("AdmissionTable", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.CourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("CourseDuration")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CourseTiming")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("InstituteId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberofStudents")
                        .HasColumnType("int");

                    b.HasKey("CourseId")
                        .HasName("PK__CourseMo__C92D71A76569F47A");

                    b.HasIndex("InstituteId");

                    b.ToTable("CourseModel", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.InstituteModel", b =>
                {
                    b.Property<int>("InstituteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstituteId"));

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InstituteAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstituteDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstituteName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("InstituteId")
                        .HasName("PK__Institut__09EC0DBB8F738F99");

                    b.ToTable("InstituteModel", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.Login", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.ToTable("Login", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.ProgressModel", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseModelCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModeUserId")
                        .HasColumnType("int");

                    b.Property<int?>("progress")
                        .HasColumnType("int");

                    b.HasKey("ProgressId");

                    b.HasIndex("CourseModelCourseId");

                    b.HasIndex("UserModeUserId");

                    b.ToTable("ProgressModels");
                });

            modelBuilder.Entity("lastdemo.Models.RatingsModel", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comments")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("InstituteId")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RatingId")
                        .HasName("PK__RatingsM__FCCDF87C5B359E5B");

                    b.HasIndex("InstituteId");

                    b.ToTable("RatingsModel", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("AlternateMobile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mobile");

                    b.Property<string>("MotherName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StudentDob")
                        .HasColumnType("date")
                        .HasColumnName("StudentDOB");

                    b.Property<string>("StudentName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("StudentId")
                        .HasName("PK__StudentM__32C52B99A72A76DB");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentModel", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.UserMode", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__UserMode__1788CC4CFC31DC40");

                    b.ToTable("UserMode", (string)null);
                });

            modelBuilder.Entity("lastdemo.Models.AdmissionTable", b =>
                {
                    b.HasOne("lastdemo.Models.CourseModel", "Course")
                        .WithMany("AdmissionTables")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Admission__Cours__47DBAE45");

                    b.HasOne("lastdemo.Models.InstituteModel", "Institute")
                        .WithMany("AdmissionTables")
                        .HasForeignKey("InstituteId")
                        .HasConstraintName("FK__Admission__Insti__48CFD27E");

                    b.HasOne("lastdemo.Models.StudentModel", "Student")
                        .WithMany("AdmissionTables")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Admission__Stude__46E78A0C");

                    b.HasOne("lastdemo.Models.UserMode", "User")
                        .WithMany("AdmissionTables")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Admission__UserI__49C3F6B7");

                    b.Navigation("Course");

                    b.Navigation("Institute");

                    b.Navigation("Student");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lastdemo.Models.CourseModel", b =>
                {
                    b.HasOne("lastdemo.Models.InstituteModel", "Institute")
                        .WithMany("CourseModels")
                        .HasForeignKey("InstituteId")
                        .HasConstraintName("FK__CourseMod__Insti__3D5E1FD2");

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("lastdemo.Models.ProgressModel", b =>
                {
                    b.HasOne("lastdemo.Models.CourseModel", "CourseModel")
                        .WithMany("ProgressModels")
                        .HasForeignKey("CourseModelCourseId");

                    b.HasOne("lastdemo.Models.UserMode", "UserMode")
                        .WithMany("ProgressModels")
                        .HasForeignKey("UserModeUserId");

                    b.Navigation("CourseModel");

                    b.Navigation("UserMode");
                });

            modelBuilder.Entity("lastdemo.Models.RatingsModel", b =>
                {
                    b.HasOne("lastdemo.Models.InstituteModel", "Institute")
                        .WithMany("RatingsModels")
                        .HasForeignKey("InstituteId")
                        .HasConstraintName("FK__RatingsMo__Insti__4316F928");

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("lastdemo.Models.StudentModel", b =>
                {
                    b.HasOne("lastdemo.Models.CourseModel", "Course")
                        .WithMany("StudentModels")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__StudentMo__Cours__403A8C7D");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("lastdemo.Models.CourseModel", b =>
                {
                    b.Navigation("AdmissionTables");

                    b.Navigation("ProgressModels");

                    b.Navigation("StudentModels");
                });

            modelBuilder.Entity("lastdemo.Models.InstituteModel", b =>
                {
                    b.Navigation("AdmissionTables");

                    b.Navigation("CourseModels");

                    b.Navigation("RatingsModels");
                });

            modelBuilder.Entity("lastdemo.Models.StudentModel", b =>
                {
                    b.Navigation("AdmissionTables");
                });

            modelBuilder.Entity("lastdemo.Models.UserMode", b =>
                {
                    b.Navigation("AdmissionTables");

                    b.Navigation("ProgressModels");
                });
#pragma warning restore 612, 618
        }
    }
}
